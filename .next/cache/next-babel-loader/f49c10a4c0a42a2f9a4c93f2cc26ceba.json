{"ast":null,"code":"import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\n\nvar rootReducer = function rootReducer(state, action) {\n  switch (action.type) {\n    case HYDRATE:\n      return action.payload;\n\n    default:\n      {\n        var combineReducer = combineReducers({});\n        return combineReducer(state, action);\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/anjoy/connected/react-web/reducers/index.js"],"names":["HYDRATE","combineReducers","rootReducer","state","action","type","payload","combineReducer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKL,OAAL;AACC,aAAOI,MAAM,CAACE,OAAd;;AACD;AAAS;AACR,YAAMC,cAAc,GAAGN,eAAe,CAAC,EAAD,CAAtC;AAEA,eAAOM,cAAc,CAACJ,KAAD,EAAQC,MAAR,CAArB;AACA;AAPF;AASA,CAVD;;AAYA,eAAeF,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase HYDRATE:\n\t\t\treturn action.payload;\n\t\tdefault: {\n\t\t\tconst combineReducer = combineReducers({\n\t\t\t});\n\t\t\treturn combineReducer(state, action);\n\t\t}\n\t}\n};\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}